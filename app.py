import streamlit as st
import requests
from datetime import datetime
import pandas as pd
import altair as alt

API_KEY = st.secrets["OPENWEATHER_API_KEY"]
try:
    API_KEY = st.secrets["OPENWEATHER_API_KEY"]
    if not API_KEY:
        st.error("OPENWEATHER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–µ–∫—Ä–µ—Ç–∞—Ö Streamlit. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.")
        st.stop()
except KeyError:
    st.error("OPENWEATHER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–µ–∫—Ä–µ—Ç–∞—Ö Streamlit. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.")
    st.stop()

def get_weather_data(lat, lon):
    url = "https://api.openweathermap.org/data/2.5/onecall"
    params = {
        "lat": lat,
        "lon": lon,
        "units": "metric",
        "lang": "ru",
        "exclude": "minutely,hourly,alerts",
        "appid": API_KEY
    }
    response = requests.get(url, params=params)
    response.raise_for_status()
    return response.json()

st.title("üå¶Ô∏è –ü–æ–≥–æ–¥–∞")

# –í–≤–æ–¥ –ª–æ–∫–∞—Ü–∏–π
locations = {}
for i in range(1, 5):
    st.subheader(f"–õ–æ–∫–∞—Ü–∏—è {i}")
    name = st.text_input(f"–ù–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ {i}:", value=f"–ú–µ—Å—Ç–æ {i}", key=f"name_{i}")
    lat = st.number_input(f"–®–∏—Ä–æ—Ç–∞ {i}:", value=55.75, format="%.6f", key=f"lat_{i}")
    lon = st.number_input(f"–î–æ–ª–≥–æ—Ç–∞ {i}:", value=37.61, format="%.6f", key=f"lon_{i}")
    locations[name] = (lat, lon)

# –í—ã–±–æ—Ä –ª–æ–∫–∞—Ü–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
st.markdown("---")
selected_locations = st.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã:", options=list(locations.keys()))

if selected_locations:
    if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–π"):
        with st.spinner("–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ..."):
            for name in selected_locations:
                lat, lon = locations[name]
                st.markdown(f"---")
                st.subheader(f"üìç –ü–æ–≥–æ–¥–∞ –≤ {name}")
                try:  # <---- –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –û–¢–°–¢–£–ü –ó–î–ï–°–¨
                    data = get_weather_data(lat, lon)

                    if "current" in data:
                        current = data["current"]
                        st.write(f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {current['temp']} ¬∞C")
                        st.write(f"–í–µ—Ç–µ—Ä: {current['wind_speed']} –º/—Å")
                        st.write(f"–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {current['clouds']} %")
                        pressure_mmHg = round(current['pressure'] * 0.75006)
                        st.write(f"–î–∞–≤–ª–µ–Ω–∏–µ: {pressure_mmHg} –º–º —Ä—Ç. —Å—Ç.")
                        rain = current.get('rain', {}).get('1h', 0)
                        snow = current.get('snow', {}).get('1h', 0)
                        st.write(f"–î–æ–∂–¥—å: {rain} –º–º/—á")
                        st.write(f"–°–Ω–µ–≥: {snow} –º–º/—á")

                        st.subheader("üîÆ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 3 –¥–Ω—è")

                        forecast_days = data["daily"][1:4]

                        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞—Ç–∞—Ñ—Ä–µ–π–º—ã –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
                        temp_records = []
                        wind_records = []
                        cloud_records = []
                        pop_records = []

                        for day in forecast_days:
                            date = datetime.fromtimestamp(day['dt']).strftime('%Y-%m-%d')

                            temp_records.append({"–î–∞—Ç–∞": date, "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞": day['temp']['day'], "–í—Ä–µ–º—è —Å—É—Ç–æ–∫": "–î–µ–Ω—å"})
                            temp_records.append({"–î–∞—Ç–∞": date, "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞": day['temp']['night'], "–í—Ä–µ–º—è —Å—É—Ç–æ–∫": "–ù–æ—á—å"})

                            wind_records.append({"–î–∞—Ç–∞": date, "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞": day['wind_speed']})
                            cloud_records.append({"–î–∞—Ç–∞": date, "–û–±–ª–∞—á–Ω–æ—Å—Ç—å": day['clouds']})
                            pop_records.append({"–î–∞—Ç–∞": date, "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤": int(day['pop'] * 100)})

                            st.write(f"üìÖ {date}")
                            st.write(f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: –¥–µ–Ω—å {day['temp']['day']} ¬∞C, –Ω–æ—á—å {day['temp']['night']} ¬∞C")
                            st.write(f"–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {day['clouds']} %")
                            st.write(f"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤: {int(day['pop'] * 100)} %")
                            rain = day.get('rain', 0)
                            snow = day.get('snow', 0)
                            st.write(f"–î–æ–∂–¥—å: {rain} –º–º")
                            st.write(f"–°–Ω–µ–≥: {snow} –º–º")

                        df_temp = pd.DataFrame(temp_records)
                        df_wind = pd.DataFrame(wind_records)
                        df_cloud = pd.DataFrame(cloud_records)
                        df_pop = pd.DataFrame(pop_records)

                        # –ì—Ä–∞—Ñ–∏–∫–∏
                        chart_temp = alt.Chart(df_temp).mark_line(point=True).encode(
                            x='–î–∞—Ç–∞',
                            y='–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞',
                            color='–í—Ä–µ–º—è —Å—É—Ç–æ–∫',
                            tooltip=['–î–∞—Ç–∞', '–í—Ä–µ–º—è —Å—É—Ç–æ–∫', '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞']
                        ).properties(width=600, height=300, title='–î–∏–Ω–∞–º–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –Ω–∞ 3 –¥–Ω—è')

                        chart_wind = alt.Chart(df_wind).mark_line(point=True, color='green').encode(
                            x='–î–∞—Ç–∞',
                            y='–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞',
                            tooltip=['–î–∞—Ç–∞', '–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞']
                        ).properties(width=600, height=200, title='–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ (–º/—Å)')

                        chart_cloud = alt.Chart(df_cloud).mark_line(point=True, color='gray').encode(
                            x='–î–∞—Ç–∞',
                            y='–û–±–ª–∞—á–Ω–æ—Å—Ç—å',
                            tooltip=['–î–∞—Ç–∞', '–û–±–ª–∞—á–Ω–æ—Å—Ç—å']
                        ).properties(width=600, height=200, title='–û–±–ª–∞—á–Ω–æ—Å—Ç—å (%)')

                        chart_pop = alt.Chart(df_pop).mark_line(point=True, color='blue').encode(
                            x='–î–∞—Ç–∞',
                            y='–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤',
                            tooltip=['–î–∞—Ç–∞', '–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤']
                        ).properties(width=600, height=200, title='–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤ (%)')

                        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –≥—Ä–∞—Ñ–∏–∫–∏ –≤ –æ–¥–∏–Ω –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü
                        combined_chart = alt.vconcat(
                            chart_temp,
                            chart_wind,
                            chart_cloud,
                            chart_pop,
                            spacing=20
                        )
                        st.altair_chart(combined_chart, use_container_width=True)
                    else:
                        st.error(f"–û—à–∏–±–∫–∞: –≤ –æ—Ç–≤–µ—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è {name}")

                except requests.exceptions.HTTPError as e:
                    if e.response.status_code == 401:
                        st.error(f"–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è {name}: –ù–µ–≤–µ—Ä–Ω—ã–π API-–∫–ª—é—á OpenWeatherMap")
                    else:
                        st.error(f"–û—à–∏–±–∫–∞ HTTP ({e.response.status_code}) –¥–ª—è {name}: {e.response.reason}")
                except Exception as e:
                    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {name}: {str(e)}")
